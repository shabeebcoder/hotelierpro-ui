{"version":3,"file":"main.0966e2aeb81acd46e602.hot-update.js","sources":["webpack:///./src/ProcessTracker/processTracker.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, message, Steps, theme } from 'antd';\n\n\ninterface ItemType {\n    title: string;\n    description: string;\n}\n\ninterface Props {\n    current: number,\n    items: ItemType[],\n    size?: string\n}\n\nconst ProcessTracker: React.FC = (props: Props) => (\n    <Steps\n        {...props}\n    />\n);\n\nexport default ProcessTracker;\n\n\n\n\n\nconst steps = [\n    {\n        title: 'First',\n        content: 'First-content',\n    },\n    {\n        title: 'Second',\n        content: 'Second-content',\n    },\n    {\n        title: 'Last',\n        content: 'Last-content',\n    },\n];\n\nexport const StepTrackerContnet: React.FC = () => {\n    const { token } = theme.useToken();\n    const [current, setCurrent] = useState(0);\n\n    const next = () => {\n        setCurrent(current + 1);\n    };\n\n    const prev = () => {\n        setCurrent(current - 1);\n    };\n\n    const items = steps.map((item) => ({ key: item.title, title: item.title }));\n\n    const contentStyle: React.CSSProperties = {\n        lineHeight: '260px',\n        textAlign: 'center',\n        color: token.colorTextTertiary,\n        backgroundColor: token.colorFillAlter,\n        borderRadius: token.borderRadiusLG,\n        border: `1px dashed ${token.colorBorder}`,\n        marginTop: 16,\n    };\n\n    return (\n        <>\n            <Steps current={current} items={items} />\n            <div style={contentStyle}>{steps[current].content}</div>\n            <div style={{ marginTop: 24 }}>\n                {current < steps.length - 1 && (\n                    <Button type=\"primary\" onClick={() => next()}>\n                        Next\n                    </Button>\n                )}\n                {current === steps.length - 1 && (\n                    <Button type=\"primary\" onClick={() => message.success('Processing complete!')}>\n                        Done\n                    </Button>\n                )}\n                {current > 0 && (\n                    <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\n                        Previous\n                    </Button>\n                )}\n            </div>\n        </>\n    );\n};\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AAAA;AAAA;AAcA;AAAA;AAGA;AAHA;AAMA;AAMA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}