{"version":3,"file":"main.0aca18bba7f1bb542c6f.hot-update.js","sources":["webpack:///./src/Input/input.stories.tsx","webpack:///./src/Input/input.tsx","webpack:///./src/Input/simpleInput.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport Input from \\\"./input\\\"\\nimport SimpleInputs from \\\"./simpleInput\\\"\\n\\nexport default {\\n    title: \\\"Input\\\"\\n}\\n\\n\\n\\n\\nexport const AutoComplete = (args) => <Input {...args} />\\nAutoComplete.args = {\\n\\n}\\n\\nexport const SimpleInput = (args) => <SimpleInputs {...args} />\\nSimpleInput.args = {\\n\\n}\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"AutoComplete\":{\"startLoc\":{\"col\":28,\"line\":12},\"endLoc\":{\"col\":57,\"line\":12},\"startBody\":{\"col\":28,\"line\":12},\"endBody\":{\"col\":57,\"line\":12}},\"SimpleInput\":{\"startLoc\":{\"col\":27,\"line\":17},\"endLoc\":{\"col\":63,\"line\":17},\"startBody\":{\"col\":27,\"line\":17},\"endBody\":{\"col\":63,\"line\":17}}};\n    \nimport React from \"react\";\nimport Input from \"./input\"\nimport SimpleInputs from \"./simpleInput\"\n\nexport default {\n    title: \"Input\"\n}\n\n\n\n\nexport const AutoComplete = (args) => <Input {...args} />;\nAutoComplete.args = {\n\n}\n\nexport const SimpleInput = (args) => <SimpleInputs {...args} />;SimpleInput.args = {\n\n}\n\n\n\nAutoComplete.parameters = { storySource: { source: \"(args) => <Input {...args} />\" }, ...AutoComplete.parameters };\nSimpleInput.parameters = { storySource: { source: \"(args) => <SimpleInputs {...args} />\" }, ...SimpleInput.parameters };","import { AutoComplete } from 'antd';\nimport React, { useState } from 'react';\n\nconst mockVal = (str: string, repeat = 1) => ({\n    value: str.repeat(repeat),\n});\n\nconst Input: React.FC = () => {\n    const [value, setValue] = useState('');\n    const [options, setOptions] = useState<{ value: string }[]>([]);\n    const [anotherOptions, setAnotherOptions] = useState<{ value: string }[]>([]);\n\n    const getPanelValue = (searchText: string) =>\n        !searchText ? [] : [mockVal(searchText), mockVal(searchText, 2), mockVal(searchText, 3)];\n\n    const onSelect = (data: string) => {\n        console.log('onSelect', data);\n    };\n\n    const onChange = (data: string) => {\n        setValue(data);\n    };\n\n    return (\n        <>\n            <AutoComplete\n                options={options}\n                style={{ width: 200 }}\n                onSelect={onSelect}\n                onSearch={(text) => setOptions(getPanelValue(text))}\n                placeholder=\"input here\"\n            />\n            <br />\n            <br />\n            <AutoComplete\n                value={value}\n                options={anotherOptions}\n                style={{ width: 200 }}\n                onSelect={onSelect}\n                onSearch={(text) => setAnotherOptions(getPanelValue(text))}\n                onChange={onChange}\n                placeholder=\"control mode\"\n            />\n        </>\n    );\n};\n\nexport default Input;","import React from 'react';\nimport { Input } from 'antd';\n\nconst App: React.FC = () => <Input placeholder=\"Basic usage\" />;\n\nexport default App;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAGA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}