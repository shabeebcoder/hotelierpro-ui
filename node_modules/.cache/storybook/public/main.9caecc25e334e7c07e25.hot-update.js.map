{"version":3,"file":"main.9caecc25e334e7c07e25.hot-update.js","sources":["webpack:///./src/Buttons/Button.stories.tsx","webpack:///./src/Buttons/Button.tsx","webpack:///./src/Tables/tables.stories.tsx","webpack:///./src/Tables/tables.tsx","webpack:///./src/TestComponent/TestComponent.stories.tsx","webpack:///./src/TestComponent/TestComponent.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\n\\nimport Buttons from \\\"./Button\\\";\\n\\nexport default {\\n    title: \\\"Buttons\\\"\\n};\\n\\nexport const Primary = (args) => <Buttons {...args} />\\nPrimary.args = {\\n    children: \\\"Primary Button\\\",\\n    type: 'default'\\n}\\nexport const Default = (args) => <Buttons {...args} />\\nDefault.args = {\\n    children: \\\"Primary Button\\\",\\n    type: 'default'\\n}\\nexport const Dashed = (args) => <Buttons {...args} />\\nDashed.args = {\\n    children: \\\"Dashed Button\\\",\\n    type: 'dashed'\\n}\\nexport const Text = (args) => <Buttons {...args} />\\nText.args = {\\n    children: \\\"Text Button\\\",\\n    type: 'text'\\n}\\nexport const Link = (args) => <Buttons {...args} />\\nLink.args = {\\n    children: \\\"Link Button\\\",\\n    type: 'link'\\n}\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":23,\"line\":9},\"endLoc\":{\"col\":54,\"line\":9},\"startBody\":{\"col\":23,\"line\":9},\"endBody\":{\"col\":54,\"line\":9}},\"Default\":{\"startLoc\":{\"col\":23,\"line\":14},\"endLoc\":{\"col\":54,\"line\":14},\"startBody\":{\"col\":23,\"line\":14},\"endBody\":{\"col\":54,\"line\":14}},\"Dashed\":{\"startLoc\":{\"col\":22,\"line\":19},\"endLoc\":{\"col\":53,\"line\":19},\"startBody\":{\"col\":22,\"line\":19},\"endBody\":{\"col\":53,\"line\":19}},\"Text\":{\"startLoc\":{\"col\":20,\"line\":24},\"endLoc\":{\"col\":51,\"line\":24},\"startBody\":{\"col\":20,\"line\":24},\"endBody\":{\"col\":51,\"line\":24}},\"Link\":{\"startLoc\":{\"col\":20,\"line\":29},\"endLoc\":{\"col\":51,\"line\":29},\"startBody\":{\"col\":20,\"line\":29},\"endBody\":{\"col\":51,\"line\":29}}};\n    \nimport React from \"react\";\n\nimport Buttons from \"./Button\";\n\nexport default {\n    title: \"Buttons\"\n};\n\nexport const Primary = (args) => <Buttons {...args} />;\nPrimary.args = {\n    children: \"Primary Button\",\n    type: 'default'\n}\nexport const Default = (args) => <Buttons {...args} />;\nDefault.args = {\n    children: \"Primary Button\",\n    type: 'default'\n}\nexport const Dashed = (args) => <Buttons {...args} />;\nDashed.args = {\n    children: \"Dashed Button\",\n    type: 'dashed'\n}\nexport const Text = (args) => <Buttons {...args} />;\nText.args = {\n    children: \"Text Button\",\n    type: 'text'\n}\nexport const Link = (args) => <Buttons {...args} />;Link.args = {\n    children: \"Link Button\",\n    type: 'link'\n}\n\n\n\nPrimary.parameters = { storySource: { source: \"(args) => <Buttons {...args} />\" }, ...Primary.parameters };\nDefault.parameters = { storySource: { source: \"(args) => <Buttons {...args} />\" }, ...Default.parameters };\nDashed.parameters = { storySource: { source: \"(args) => <Buttons {...args} />\" }, ...Dashed.parameters };\nText.parameters = { storySource: { source: \"(args) => <Buttons {...args} />\" }, ...Text.parameters };\nLink.parameters = { storySource: { source: \"(args) => <Buttons {...args} />\" }, ...Link.parameters };","import React, { HTMLAttributes, ReactNode } from 'react';\nimport { Button, Space } from 'antd';\n\n\ninterface Props extends HTMLAttributes<HTMLButtonElement> {\n    children: ReactNode,\n    type: 'primary' | 'default' | 'dashed' | 'text' | 'link'\n}\n\nexport default function ({ children, ...props }: Props) {\n    return (\n        <Space wrap>\n            <Button {...props} >{children}</Button>\n            {/* <Button>Default Button</Button>\n            <Button type=\"dashed\">Dashed Button</Button>\n            <Button type=\"text\">Text Button</Button>\n            <Button type=\"link\">Link Button</Button> */}\n        </Space>\n    )\n}","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport Tables from \\\"../Tables\\\";\\nimport { Space, Table, Tag } from 'antd';\\nimport type { ColumnsType } from 'antd/es/table';\\n\\nexport default {\\n    title: \\\"Tables\\\"\\n}\\n\\n\\ninterface DataType {\\n    key: string;\\n    name: string;\\n    age: number;\\n    address: string;\\n    tags: string[];\\n}\\n\\nconst data: DataType[] = [\\n    {\\n        key: '1',\\n        name: 'John Brown',\\n        age: 32,\\n        address: 'New York No. 1 Lake Park',\\n        tags: ['nice', 'developer'],\\n    },\\n    {\\n        key: '2',\\n        name: 'Jim Green',\\n        age: 42,\\n        address: 'London No. 1 Lake Park',\\n        tags: ['loser'],\\n    },\\n    {\\n        key: '3',\\n        name: 'Joe Black',\\n        age: 32,\\n        address: 'Sydney No. 1 Lake Park',\\n        tags: ['cool', 'teacher'],\\n    },\\n];\\n\\nconst columns: ColumnsType<DataType> = [\\n    {\\n        title: 'Name',\\n        dataIndex: 'name',\\n        key: 'name',\\n        render: (text) => <a>{text}</a>,\\n    },\\n    {\\n        title: 'Age',\\n        dataIndex: 'age',\\n        key: 'age',\\n    },\\n    {\\n        title: 'Address',\\n        dataIndex: 'address',\\n        key: 'address',\\n    },\\n    {\\n        title: 'Tags',\\n        key: 'tags',\\n        dataIndex: 'tags',\\n        render: (_, { tags }) => (\\n            <>\\n                {tags.map((tag) => {\\n                    let color = tag.length > 5 ? 'geekblue' : 'green';\\n                    if (tag === 'loser') {\\n                        color = 'volcano';\\n                    }\\n                    return (\\n                        <Tag color={color} key={tag}>\\n                            {tag.toUpperCase()}\\n                        </Tag>\\n                    );\\n                })}\\n            </>\\n        ),\\n    },\\n    {\\n        title: 'Action',\\n        key: 'action',\\n        render: (_, record) => (\\n            <Space size=\\\"middle\\\">\\n                <a>Invite {record.name}</a>\\n                <a>Delete</a>\\n            </Space>\\n        ),\\n    },\\n];\\n\\n\\n\\nexport const Primary = (args) => <Tables {...args} />\\n\\nPrimary.args = {\\n    columns: columns,\\n    dataSource: data\\n\\n}\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":23,\"line\":94},\"endLoc\":{\"col\":53,\"line\":94},\"startBody\":{\"col\":23,\"line\":94},\"endBody\":{\"col\":53,\"line\":94}}};\n    \nimport React from \"react\";\nimport Tables from \"../Tables\";\nimport { Space, Table, Tag } from 'antd';\nimport type { ColumnsType } from 'antd/es/table';\n\nexport default {\n    title: \"Tables\"\n}\n\n\ninterface DataType {\n    key: string;\n    name: string;\n    age: number;\n    address: string;\n    tags: string[];\n}\n\nconst data: DataType[] = [\n    {\n        key: '1',\n        name: 'John Brown',\n        age: 32,\n        address: 'New York No. 1 Lake Park',\n        tags: ['nice', 'developer'],\n    },\n    {\n        key: '2',\n        name: 'Jim Green',\n        age: 42,\n        address: 'London No. 1 Lake Park',\n        tags: ['loser'],\n    },\n    {\n        key: '3',\n        name: 'Joe Black',\n        age: 32,\n        address: 'Sydney No. 1 Lake Park',\n        tags: ['cool', 'teacher'],\n    },\n];\n\nconst columns: ColumnsType<DataType> = [\n    {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n        render: (text) => <a>{text}</a>,\n    },\n    {\n        title: 'Age',\n        dataIndex: 'age',\n        key: 'age',\n    },\n    {\n        title: 'Address',\n        dataIndex: 'address',\n        key: 'address',\n    },\n    {\n        title: 'Tags',\n        key: 'tags',\n        dataIndex: 'tags',\n        render: (_, { tags }) => (\n            <>\n                {tags.map((tag) => {\n                    let color = tag.length > 5 ? 'geekblue' : 'green';\n                    if (tag === 'loser') {\n                        color = 'volcano';\n                    }\n                    return (\n                        <Tag color={color} key={tag}>\n                            {tag.toUpperCase()}\n                        </Tag>\n                    );\n                })}\n            </>\n        ),\n    },\n    {\n        title: 'Action',\n        key: 'action',\n        render: (_, record) => (\n            <Space size=\"middle\">\n                <a>Invite {record.name}</a>\n                <a>Delete</a>\n            </Space>\n        ),\n    },\n];\n\n\n\nexport const Primary = (args) => <Tables {...args} />;\nPrimary.args = {\n    columns: columns,\n    dataSource: data\n\n}\n\n\nPrimary.parameters = { storySource: { source: \"(args) => <Tables {...args} />\" }, ...Primary.parameters };","import React from 'react';\nimport { Space, Table, Tag } from 'antd';\nimport type { ColumnsType } from 'antd/es/table';\n\ninterface DataType {\n    key: string;\n    name: string;\n    age: number;\n    address: string;\n    tags: string[];\n}\n\n\n\ninterface Props {\n    columns: ColumnsType<DataType>,\n    dataSource: DataType[]\n}\n\nconst App: React.FC = (props: Props) => <Table {...props} />;\n\nexport default App;","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport TestComponent from \\\"./TestComponent\\\";\\n\\nexport default {\\n  title: \\\"TestComponent\\\"\\n};\\n\\nexport const WithText = () => (\\n  <TestComponent\\n    heading=\\\"I am a test component\\\"\\n    content={<h2>Made with love by Harvey</h2>}\\n  />\\n);\\n\\nexport const WithButtons = () => (\\n  <TestComponent\\n    heading=\\\"I have a button\\\"\\n    content={\\n      <div>\\n        <button onClick={() => alert(\\\"You clicked me!\\\")}>Click me</button>\\n      </div>\\n    }\\n  />\\n);\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"WithText\":{\"startLoc\":{\"col\":24,\"line\":8},\"endLoc\":{\"col\":1,\"line\":13},\"startBody\":{\"col\":24,\"line\":8},\"endBody\":{\"col\":1,\"line\":13}},\"WithButtons\":{\"startLoc\":{\"col\":27,\"line\":15},\"endLoc\":{\"col\":1,\"line\":24},\"startBody\":{\"col\":27,\"line\":15},\"endBody\":{\"col\":1,\"line\":24}}};\n    \nimport React from \"react\";\nimport TestComponent from \"./TestComponent\";\n\nexport default {\n  title: \"TestComponent\"\n};\n\nexport const WithText = () => (\n  <TestComponent\n    heading=\"I am a test component\"\n    content={<h2>Made with love by Harvey</h2>}\n  />\n);;\n\nexport const WithButtons = () => (\n  <TestComponent\n    heading=\"I have a button\"\n    content={\n      <div>\n        <button onClick={() => alert(\"You clicked me!\")}>Click me</button>\n      </div>\n    }\n  />\n);\n\n\n\nWithText.parameters = { storySource: { source: \"() => (\\n  <TestComponent\\n    heading=\\\"I am a test component\\\"\\n    content={<h2>Made with love by Harvey</h2>}\\n  />\\n)\" }, ...WithText.parameters };\nWithButtons.parameters = { storySource: { source: \"() => (\\n  <TestComponent\\n    heading=\\\"I have a button\\\"\\n    content={\\n      <div>\\n        <button onClick={() => alert(\\\"You clicked me!\\\")}>Click me</button>\\n      </div>\\n    }\\n  />\\n)\" }, ...WithButtons.parameters };","import React from \"react\";\nimport { Card } from \"antd\";\nconst { Meta } = Card;\nexport default function AntdCard() {\n  return (\n    <Card\n      hoverable\n      style={{ width: 250 }}\n      cover={\n        <img\n          alt=\"example\"\n          src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\"\n        />\n      }\n    >\n      <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\n    </Card>\n  );\n};"],"mappingshDA;AACA;AAAA;AAQA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAOA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9GA;AACA;AAAA;AAkBA;AAAA;AAAA;AAAA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAJA;AAKA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AARA;AAaA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAGA;AAfA;AAeA;;;;A","sourceRoot":""}