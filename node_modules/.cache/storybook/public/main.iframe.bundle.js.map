{"version":3,"file":"main.iframe.bundle.js","sources":["webpack:///./.storybook/preview.js","webpack:///./.storybook/preview.js-generated-config-entry.js","webpack:///./generated-stories-entry.js","webpack:///\\.)(?43a0","webpack:///\\.)(","webpack:///./src/Buttons/Button.stories.tsx","webpack:///./src/Buttons/Button.tsx","webpack:///./src/Input/input.stories.tsx","webpack:///./src/Input/input.tsx","webpack:///./src/Input/simpleInput.tsx","webpack:///./src/ProcessTracker/processTracker.stories.tsx","webpack:///./src/ProcessTracker/processTracker.tsx","webpack:///./src/Tables/index.ts","webpack:///./src/Tables/tables.stories.tsx","webpack:///./src/Tables/tables.tsx","webpack:///./src/TestComponent/TestComponent.stories.tsx","webpack:///./src/TestComponent/TestComponent.tsx","webpack:///./src/Typography/typography.stories.tsx","webpack:///./src/Typography/typography.tsx","webpack:///./storybook-init-framework-entry.js","webpack:///./util.inspect (ignored)"],"sourcesContent":["export const parameters = {\n  actions: { argTypesRegex: \"^on[A-Z].*\" },\n  controls: {\n    matchers: {\n      color: /(background|color)$/i,\n      date: /Date$/,\n    },\n  },\n}","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable import/no-unresolved */\nimport { addDecorator, addParameters, addLoader, addArgs, addArgTypes, addArgsEnhancer, addArgTypesEnhancer, setGlobalRender } from '/Users/shabeebck/woxware/hotelier/ui-library/node_modules/@storybook/client-api';\nimport * as config from '/Users/shabeebck/woxware/hotelier/ui-library/.storybook/preview.js';\nObject.keys(config).forEach(function (key) {\n  var value = config[key];\n\n  switch (key) {\n    case 'args':\n      {\n        return addArgs(value);\n      }\n\n    case 'argTypes':\n      {\n        return addArgTypes(value);\n      }\n\n    case 'decorators':\n      {\n        return value.forEach(function (decorator) {\n          return addDecorator(decorator, false);\n        });\n      }\n\n    case 'loaders':\n      {\n        return value.forEach(function (loader) {\n          return addLoader(loader, false);\n        });\n      }\n\n    case 'parameters':\n      {\n        return addParameters(_objectSpread({}, value), false);\n      }\n\n    case 'argTypesEnhancers':\n      {\n        return value.forEach(function (enhancer) {\n          return addArgTypesEnhancer(enhancer);\n        });\n      }\n\n    case 'argsEnhancers':\n      {\n        return value.forEach(function (enhancer) {\n          return addArgsEnhancer(enhancer);\n        });\n      }\n\n    case 'render':\n      {\n        return setGlobalRender(value);\n      }\n\n    case 'globals':\n    case 'globalTypes':\n      {\n        var v = {};\n        v[key] = value;\n        return addParameters(v, false);\n      }\n\n    case '__namedExportsOrder':\n    case 'decorateStory':\n    case 'renderToDOM':\n      {\n        return null; // This key is not handled directly in v6 mode.\n      }\n\n    default:\n      {\n        // eslint-disable-next-line prefer-template\n        return console.log(key + ' was not supported :( !');\n      }\n  }\n});","\"use strict\";\n\nvar _frameworkImportPath = require(\"@storybook/react\");\n\n/* eslint-disable import/no-unresolved */\n(0, _frameworkImportPath.configure)([require.context('./src', true, /^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$/),require.context('./src', true, /^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$/)], module, false);","var map = {\n\t\"./Buttons/Button.stories.tsx\": \"./src/Buttons/Button.stories.tsx\",\n\t\"./Input/input.stories.tsx\": \"./src/Input/input.stories.tsx\",\n\t\"./ProcessTracker/processTracker.stories.tsx\": \"./src/ProcessTracker/processTracker.stories.tsx\",\n\t\"./Tables/tables.stories.tsx\": \"./src/Tables/tables.stories.tsx\",\n\t\"./TestComponent/TestComponent.stories.tsx\": \"./src/TestComponent/TestComponent.stories.tsx\",\n\t\"./Typography/typography.stories.tsx\": \"./src/Typography/typography.stories.tsx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src sync recursive ^\\\\.(?:(?:^|\\\\/|(?:(?:(?!(?:^|\\\\/)\\\\.).)*?)\\\\/)(?!\\\\.)(?=.)[^/]*?\\\\.stories\\\\.(js|jsx|ts|tsx))$\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./src sync recursive ^\\\\.(?:(?:^|\\\\/|(?:(?:(?!(?:^|\\\\/)\\\\.).)*?)\\\\/)(?!\\\\.)(?=.)[^/]*?\\\\.stories\\\\.mdx)$\";","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\n\\nimport Buttons from \\\"./Button\\\";\\n\\nexport default {\\n    title: \\\"Buttons\\\"\\n};\\n\\nexport const Primary = (args) => <Buttons {...args} />\\nPrimary.args = {\\n    children: \\\"Primary Button\\\",\\n    type: 'default'\\n}\\nexport const Default = (args) => <Buttons {...args} />\\nDefault.args = {\\n    children: \\\"Primary Button\\\",\\n    type: 'default'\\n}\\nexport const Dashed = (args) => <Buttons {...args} />\\nDashed.args = {\\n    children: \\\"Dashed Button\\\",\\n    type: 'dashed'\\n}\\nexport const Text = (args) => <Buttons {...args} />\\nText.args = {\\n    children: \\\"Text Button\\\",\\n    type: 'text'\\n}\\nexport const Link = (args) => <Buttons {...args} />\\nLink.args = {\\n    children: \\\"Link Button\\\",\\n    type: 'link'\\n}\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":23,\"line\":9},\"endLoc\":{\"col\":54,\"line\":9},\"startBody\":{\"col\":23,\"line\":9},\"endBody\":{\"col\":54,\"line\":9}},\"Default\":{\"startLoc\":{\"col\":23,\"line\":14},\"endLoc\":{\"col\":54,\"line\":14},\"startBody\":{\"col\":23,\"line\":14},\"endBody\":{\"col\":54,\"line\":14}},\"Dashed\":{\"startLoc\":{\"col\":22,\"line\":19},\"endLoc\":{\"col\":53,\"line\":19},\"startBody\":{\"col\":22,\"line\":19},\"endBody\":{\"col\":53,\"line\":19}},\"Text\":{\"startLoc\":{\"col\":20,\"line\":24},\"endLoc\":{\"col\":51,\"line\":24},\"startBody\":{\"col\":20,\"line\":24},\"endBody\":{\"col\":51,\"line\":24}},\"Link\":{\"startLoc\":{\"col\":20,\"line\":29},\"endLoc\":{\"col\":51,\"line\":29},\"startBody\":{\"col\":20,\"line\":29},\"endBody\":{\"col\":51,\"line\":29}}};\n    \nimport React from \"react\";\n\nimport Buttons from \"./Button\";\n\nexport default {\n    title: \"Buttons\"\n};\n\nexport const Primary = (args) => <Buttons {...args} />;\nPrimary.args = {\n    children: \"Primary Button\",\n    type: 'default'\n}\nexport const Default = (args) => <Buttons {...args} />;\nDefault.args = {\n    children: \"Primary Button\",\n    type: 'default'\n}\nexport const Dashed = (args) => <Buttons {...args} />;\nDashed.args = {\n    children: \"Dashed Button\",\n    type: 'dashed'\n}\nexport const Text = (args) => <Buttons {...args} />;\nText.args = {\n    children: \"Text Button\",\n    type: 'text'\n}\nexport const Link = (args) => <Buttons {...args} />;Link.args = {\n    children: \"Link Button\",\n    type: 'link'\n}\n\n\n\nPrimary.parameters = { storySource: { source: \"(args) => <Buttons {...args} />\" }, ...Primary.parameters };\nDefault.parameters = { storySource: { source: \"(args) => <Buttons {...args} />\" }, ...Default.parameters };\nDashed.parameters = { storySource: { source: \"(args) => <Buttons {...args} />\" }, ...Dashed.parameters };\nText.parameters = { storySource: { source: \"(args) => <Buttons {...args} />\" }, ...Text.parameters };\nLink.parameters = { storySource: { source: \"(args) => <Buttons {...args} />\" }, ...Link.parameters };","import React, { HTMLAttributes, ReactNode } from 'react';\nimport { Button, Space } from 'antd';\n\n\ninterface Props extends HTMLAttributes<HTMLButtonElement> {\n    children: ReactNode,\n    type: 'primary' | 'default' | 'dashed' | 'text' | 'link'\n}\n\nexport default function ({ children, ...props }: Props) {\n    return (\n        <Space wrap>\n            <Button {...props} >{children}</Button>\n        </Space>\n    )\n}","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport Input from \\\"./input\\\"\\nimport SimpleInputs from \\\"./simpleInput\\\"\\n\\nexport default {\\n    title: \\\"Input\\\"\\n}\\n\\n\\n\\n\\nexport const AutoComplete = (args) => <Input {...args} />\\nAutoComplete.args = {\\n\\n}\\n\\nexport const SimpleInput = (args) => <SimpleInputs {...args} />\\nSimpleInput.args = {\\n\\n}\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"AutoComplete\":{\"startLoc\":{\"col\":28,\"line\":12},\"endLoc\":{\"col\":57,\"line\":12},\"startBody\":{\"col\":28,\"line\":12},\"endBody\":{\"col\":57,\"line\":12}},\"SimpleInput\":{\"startLoc\":{\"col\":27,\"line\":17},\"endLoc\":{\"col\":63,\"line\":17},\"startBody\":{\"col\":27,\"line\":17},\"endBody\":{\"col\":63,\"line\":17}}};\n    \nimport React from \"react\";\nimport Input from \"./input\"\nimport SimpleInputs from \"./simpleInput\"\n\nexport default {\n    title: \"Input\"\n}\n\n\n\n\nexport const AutoComplete = (args) => <Input {...args} />;\nAutoComplete.args = {\n\n}\n\nexport const SimpleInput = (args) => <SimpleInputs {...args} />;SimpleInput.args = {\n\n}\n\n\n\nAutoComplete.parameters = { storySource: { source: \"(args) => <Input {...args} />\" }, ...AutoComplete.parameters };\nSimpleInput.parameters = { storySource: { source: \"(args) => <SimpleInputs {...args} />\" }, ...SimpleInput.parameters };","import { AutoComplete } from 'antd';\nimport React, { useState } from 'react';\n\nconst mockVal = (str: string, repeat = 1) => ({\n    value: str.repeat(repeat),\n});\n\nconst Input: React.FC = () => {\n    const [value, setValue] = useState('');\n    const [options, setOptions] = useState<{ value: string }[]>([]);\n    const [anotherOptions, setAnotherOptions] = useState<{ value: string }[]>([]);\n\n    const getPanelValue = (searchText: string) =>\n        !searchText ? [] : [mockVal(searchText), mockVal(searchText, 2), mockVal(searchText, 3)];\n\n    const onSelect = (data: string) => {\n        console.log('onSelect', data);\n    };\n\n    const onChange = (data: string) => {\n        setValue(data);\n    };\n\n    return (\n        <>\n            <AutoComplete\n                options={options}\n                style={{ width: 200 }}\n                onSelect={onSelect}\n                onSearch={(text) => setOptions(getPanelValue(text))}\n                placeholder=\"input here\"\n            />\n            <br />\n            <br />\n            <AutoComplete\n                value={value}\n                options={anotherOptions}\n                style={{ width: 200 }}\n                onSelect={onSelect}\n                onSearch={(text) => setAnotherOptions(getPanelValue(text))}\n                onChange={onChange}\n                placeholder=\"control mode\"\n            />\n        </>\n    );\n};\n\nexport default Input;","import React from 'react';\nimport { Input } from 'antd';\n\nconst TextField: React.FC = () => <Input placeholder=\"Basic usage\" />;\n\nexport default TextField;","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport ProcessTracker, { StepTrackerContnet } from \\\"./processTracker\\\";\\nimport { LoadingOutlined, SmileOutlined, SolutionOutlined, UserOutlined } from '@ant-design/icons';\\n\\nexport default {\\n    title: \\\"Process Tracker\\\"\\n}\\n\\n\\nconst description = 'This is a description.';\\nconst items = [{\\n    title: 'Finished',\\n    description,\\n},\\n{\\n    title: 'In Progress',\\n    description,\\n    subTitle: 'Left 00:00:08',\\n},\\n{\\n    title: 'Waiting',\\n    description,\\n},\\n]\\n\\nconst itemsWithIcon = [\\n    {\\n        title: 'Login',\\n        status: 'finish',\\n        icon: <UserOutlined />,\\n    },\\n    {\\n        title: 'Verification',\\n        status: 'finish',\\n        icon: <SolutionOutlined />,\\n    },\\n    {\\n        title: 'Pay',\\n        status: 'process',\\n        icon: <LoadingOutlined />,\\n    },\\n    {\\n        title: 'Done',\\n        status: 'wait',\\n        icon: <SmileOutlined />,\\n    },\\n]\\n\\nexport const Horizontal = (args) => <ProcessTracker  {...args} />\\n\\nHorizontal.args = {\\n    current: 1,\\n    items\\n}\\n\\nexport const Small = (args) => <ProcessTracker  {...args} />\\n\\nSmall.args = {\\n    current: 1,\\n    items,\\n    size: \\\"small\\\"\\n}\\n\\nexport const WithIcon = (args) => <ProcessTracker  {...args} />\\nWithIcon.args = {\\n    current: 1,\\n    items: itemsWithIcon,\\n    size: \\\"small\\\"\\n}\\n\\nexport const Vertical = (args) => <ProcessTracker  {...args} />\\nVertical.args = {\\n    current: 1,\\n    items,\\n    direction: \\\"vertical\\\"\\n}\\n\\n\\nexport const WithContent = (args) => <StepTrackerContnet  {...args} />\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Horizontal\":{\"startLoc\":{\"col\":26,\"line\":49},\"endLoc\":{\"col\":65,\"line\":49},\"startBody\":{\"col\":26,\"line\":49},\"endBody\":{\"col\":65,\"line\":49}},\"Small\":{\"startLoc\":{\"col\":21,\"line\":56},\"endLoc\":{\"col\":60,\"line\":56},\"startBody\":{\"col\":21,\"line\":56},\"endBody\":{\"col\":60,\"line\":56}},\"WithIcon\":{\"startLoc\":{\"col\":24,\"line\":64},\"endLoc\":{\"col\":63,\"line\":64},\"startBody\":{\"col\":24,\"line\":64},\"endBody\":{\"col\":63,\"line\":64}},\"Vertical\":{\"startLoc\":{\"col\":24,\"line\":71},\"endLoc\":{\"col\":63,\"line\":71},\"startBody\":{\"col\":24,\"line\":71},\"endBody\":{\"col\":63,\"line\":71}},\"WithContent\":{\"startLoc\":{\"col\":27,\"line\":79},\"endLoc\":{\"col\":70,\"line\":79},\"startBody\":{\"col\":27,\"line\":79},\"endBody\":{\"col\":70,\"line\":79}}};\n    \nimport React from \"react\";\nimport ProcessTracker, { StepTrackerContnet } from \"./processTracker\";\nimport { LoadingOutlined, SmileOutlined, SolutionOutlined, UserOutlined } from '@ant-design/icons';\n\nexport default {\n    title: \"Process Tracker\"\n}\n\n\nconst description = 'This is a description.';\nconst items = [{\n    title: 'Finished',\n    description,\n},\n{\n    title: 'In Progress',\n    description,\n    subTitle: 'Left 00:00:08',\n},\n{\n    title: 'Waiting',\n    description,\n},\n]\n\nconst itemsWithIcon = [\n    {\n        title: 'Login',\n        status: 'finish',\n        icon: <UserOutlined />,\n    },\n    {\n        title: 'Verification',\n        status: 'finish',\n        icon: <SolutionOutlined />,\n    },\n    {\n        title: 'Pay',\n        status: 'process',\n        icon: <LoadingOutlined />,\n    },\n    {\n        title: 'Done',\n        status: 'wait',\n        icon: <SmileOutlined />,\n    },\n]\n\nexport const Horizontal = (args) => <ProcessTracker  {...args} />;\n\nHorizontal.args = {\n    current: 1,\n    items\n}\n\nexport const Small = (args) => <ProcessTracker  {...args} />;\n\nSmall.args = {\n    current: 1,\n    items,\n    size: \"small\"\n}\n\nexport const WithIcon = (args) => <ProcessTracker  {...args} />;\nWithIcon.args = {\n    current: 1,\n    items: itemsWithIcon,\n    size: \"small\"\n}\n\nexport const Vertical = (args) => <ProcessTracker  {...args} />;\nVertical.args = {\n    current: 1,\n    items,\n    direction: \"vertical\"\n}\n\n\nexport const WithContent = (args) => <StepTrackerContnet  {...args} />;\n\n\nHorizontal.parameters = { storySource: { source: \"(args) => <ProcessTracker  {...args} />\" }, ...Horizontal.parameters };\nSmall.parameters = { storySource: { source: \"(args) => <ProcessTracker  {...args} />\" }, ...Small.parameters };\nWithIcon.parameters = { storySource: { source: \"(args) => <ProcessTracker  {...args} />\" }, ...WithIcon.parameters };\nVertical.parameters = { storySource: { source: \"(args) => <ProcessTracker  {...args} />\" }, ...Vertical.parameters };\nWithContent.parameters = { storySource: { source: \"(args) => <StepTrackerContnet  {...args} />\" }, ...WithContent.parameters };","import React, { useState } from 'react';\nimport { Button, message, Steps, theme } from 'antd';\n\n\ninterface ItemType {\n    title: string;\n    description: string;\n}\n\ninterface Props {\n    current: number,\n    items: ItemType[],\n    size?: string,\n    direction?: string\n}\n\nconst ProcessTracker: React.FC = (props: Props) => (\n    <Steps\n        {...props}\n    />\n);\n\nexport default ProcessTracker;\n\n\n\n\n\nconst steps = [\n    {\n        title: 'First',\n        content: 'First-content',\n    },\n    {\n        title: 'Second',\n        content: 'Second-content',\n    },\n    {\n        title: 'Last',\n        content: 'Last-content',\n    },\n];\n\nexport const StepTrackerContnet: React.FC = () => {\n    const { token } = theme.useToken();\n    const [current, setCurrent] = useState(0);\n\n    const next = () => {\n        setCurrent(current + 1);\n    };\n\n    const prev = () => {\n        setCurrent(current - 1);\n    };\n\n    const items = steps.map((item) => ({ key: item.title, title: item.title }));\n\n    const contentStyle: React.CSSProperties = {\n        lineHeight: '260px',\n        textAlign: 'center',\n        color: token.colorTextTertiary,\n        backgroundColor: token.colorFillAlter,\n        borderRadius: token.borderRadiusLG,\n        border: `1px dashed ${token.colorBorder}`,\n        marginTop: 16,\n    };\n\n    return (\n        <>\n            <Steps current={current} items={items} />\n            <div style={contentStyle}>{steps[current].content}</div>\n            <div style={{ marginTop: 24 }}>\n                {current < steps.length - 1 && (\n                    <Button type=\"primary\" onClick={() => next()}>\n                        Next\n                    </Button>\n                )}\n                {current === steps.length - 1 && (\n                    <Button type=\"primary\" onClick={() => message.success('Processing complete!')}>\n                        Done\n                    </Button>\n                )}\n                {current > 0 && (\n                    <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\n                        Previous\n                    </Button>\n                )}\n            </div>\n        </>\n    );\n};\n\n","import tables from \"./tables\";\n\nexport default tables","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport Tables from \\\"../Tables\\\";\\nimport { Space, Table, Tag } from 'antd';\\nimport type { ColumnsType } from 'antd/es/table';\\n\\nexport default {\\n    title: \\\"Tables\\\"\\n}\\n\\n\\ninterface DataType {\\n    key: string;\\n    name: string;\\n    age: number;\\n    address: string;\\n    tags: string[];\\n}\\n\\nconst data: DataType[] = [\\n    {\\n        key: '1',\\n        name: 'John Brown',\\n        age: 32,\\n        address: 'New York No. 1 Lake Park',\\n        tags: ['nice', 'developer'],\\n    },\\n    {\\n        key: '2',\\n        name: 'Jim Green',\\n        age: 42,\\n        address: 'London No. 1 Lake Park',\\n        tags: ['loser'],\\n    },\\n    {\\n        key: '3',\\n        name: 'Joe Black',\\n        age: 32,\\n        address: 'Sydney No. 1 Lake Park',\\n        tags: ['cool', 'teacher'],\\n    },\\n];\\n\\nconst columns: ColumnsType<DataType> = [\\n    {\\n        title: 'Name',\\n        dataIndex: 'name',\\n        key: 'name',\\n        render: (text) => <a>{text}</a>,\\n    },\\n    {\\n        title: 'Age',\\n        dataIndex: 'age',\\n        key: 'age',\\n    },\\n    {\\n        title: 'Address',\\n        dataIndex: 'address',\\n        key: 'address',\\n    },\\n    {\\n        title: 'Tags',\\n        key: 'tags',\\n        dataIndex: 'tags',\\n        render: (_, { tags }) => (\\n            <>\\n                {tags.map((tag) => {\\n                    let color = tag.length > 5 ? 'geekblue' : 'green';\\n                    if (tag === 'loser') {\\n                        color = 'volcano';\\n                    }\\n                    return (\\n                        <Tag color={color} key={tag}>\\n                            {tag.toUpperCase()}\\n                        </Tag>\\n                    );\\n                })}\\n            </>\\n        ),\\n    },\\n    {\\n        title: 'Action',\\n        key: 'action',\\n        render: (_, record) => (\\n            <Space size=\\\"middle\\\">\\n                <a>Invite {record.name}</a>\\n                <a>Delete</a>\\n            </Space>\\n        ),\\n    },\\n];\\n\\n\\n\\nexport const Primary = (args) => <Tables {...args} />\\n\\nPrimary.args = {\\n    columns: columns,\\n    dataSource: data\\n\\n}\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":23,\"line\":94},\"endLoc\":{\"col\":53,\"line\":94},\"startBody\":{\"col\":23,\"line\":94},\"endBody\":{\"col\":53,\"line\":94}}};\n    \nimport React from \"react\";\nimport Tables from \"../Tables\";\nimport { Space, Table, Tag } from 'antd';\nimport type { ColumnsType } from 'antd/es/table';\n\nexport default {\n    title: \"Tables\"\n}\n\n\ninterface DataType {\n    key: string;\n    name: string;\n    age: number;\n    address: string;\n    tags: string[];\n}\n\nconst data: DataType[] = [\n    {\n        key: '1',\n        name: 'John Brown',\n        age: 32,\n        address: 'New York No. 1 Lake Park',\n        tags: ['nice', 'developer'],\n    },\n    {\n        key: '2',\n        name: 'Jim Green',\n        age: 42,\n        address: 'London No. 1 Lake Park',\n        tags: ['loser'],\n    },\n    {\n        key: '3',\n        name: 'Joe Black',\n        age: 32,\n        address: 'Sydney No. 1 Lake Park',\n        tags: ['cool', 'teacher'],\n    },\n];\n\nconst columns: ColumnsType<DataType> = [\n    {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n        render: (text) => <a>{text}</a>,\n    },\n    {\n        title: 'Age',\n        dataIndex: 'age',\n        key: 'age',\n    },\n    {\n        title: 'Address',\n        dataIndex: 'address',\n        key: 'address',\n    },\n    {\n        title: 'Tags',\n        key: 'tags',\n        dataIndex: 'tags',\n        render: (_, { tags }) => (\n            <>\n                {tags.map((tag) => {\n                    let color = tag.length > 5 ? 'geekblue' : 'green';\n                    if (tag === 'loser') {\n                        color = 'volcano';\n                    }\n                    return (\n                        <Tag color={color} key={tag}>\n                            {tag.toUpperCase()}\n                        </Tag>\n                    );\n                })}\n            </>\n        ),\n    },\n    {\n        title: 'Action',\n        key: 'action',\n        render: (_, record) => (\n            <Space size=\"middle\">\n                <a>Invite {record.name}</a>\n                <a>Delete</a>\n            </Space>\n        ),\n    },\n];\n\n\n\nexport const Primary = (args) => <Tables {...args} />;\nPrimary.args = {\n    columns: columns,\n    dataSource: data\n\n}\n\n\nPrimary.parameters = { storySource: { source: \"(args) => <Tables {...args} />\" }, ...Primary.parameters };","import React from 'react';\nimport { Space, Table, Tag } from 'antd';\nimport type { ColumnsType } from 'antd/es/table';\n\ninterface DataType {\n    key: string;\n    name: string;\n    age: number;\n    address: string;\n    tags: string[];\n}\n\n\n\ninterface Props {\n    columns: ColumnsType<DataType>,\n    dataSource: DataType[]\n}\n\nconst Button: React.FC = (props: Props) => <Table {...props} />;\n\nexport default Button;","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport TestComponent from \\\"./TestComponent\\\";\\n\\nexport default {\\n  title: \\\"TestComponent\\\"\\n};\\n\\nexport const WithText = () => (\\n  <TestComponent\\n    heading=\\\"I am a test component\\\"\\n    content={<h2>Made with love by Harvey</h2>}\\n  />\\n);\\n\\nexport const WithButtons = () => (\\n  <TestComponent\\n    heading=\\\"I have a button\\\"\\n    content={\\n      <div>\\n        <button onClick={() => alert(\\\"You clicked me!\\\")}>Click me</button>\\n      </div>\\n    }\\n  />\\n);\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"WithText\":{\"startLoc\":{\"col\":24,\"line\":8},\"endLoc\":{\"col\":1,\"line\":13},\"startBody\":{\"col\":24,\"line\":8},\"endBody\":{\"col\":1,\"line\":13}},\"WithButtons\":{\"startLoc\":{\"col\":27,\"line\":15},\"endLoc\":{\"col\":1,\"line\":24},\"startBody\":{\"col\":27,\"line\":15},\"endBody\":{\"col\":1,\"line\":24}}};\n    \nimport React from \"react\";\nimport TestComponent from \"./TestComponent\";\n\nexport default {\n  title: \"TestComponent\"\n};\n\nexport const WithText = () => (\n  <TestComponent\n    heading=\"I am a test component\"\n    content={<h2>Made with love by Harvey</h2>}\n  />\n);;\n\nexport const WithButtons = () => (\n  <TestComponent\n    heading=\"I have a button\"\n    content={\n      <div>\n        <button onClick={() => alert(\"You clicked me!\")}>Click me</button>\n      </div>\n    }\n  />\n);\n\n\n\nWithText.parameters = { storySource: { source: \"() => (\\n  <TestComponent\\n    heading=\\\"I am a test component\\\"\\n    content={<h2>Made with love by Harvey</h2>}\\n  />\\n)\" }, ...WithText.parameters };\nWithButtons.parameters = { storySource: { source: \"() => (\\n  <TestComponent\\n    heading=\\\"I have a button\\\"\\n    content={\\n      <div>\\n        <button onClick={() => alert(\\\"You clicked me!\\\")}>Click me</button>\\n      </div>\\n    }\\n  />\\n)\" }, ...WithButtons.parameters };","import React from \"react\";\nimport { Card } from \"antd\";\nconst { Meta } = Card;\nexport default function AntdCard() {\n  return (\n    <Card\n      hoverable\n      style={{ width: 250 }}\n      cover={\n        <img\n          alt=\"example\"\n          src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\"\n        />\n      }\n    >\n      <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\n    </Card>\n  );\n};","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\n\\nimport Headline from \\\"./typography\\\";\\n\\nexport default {\\n    title: \\\"Typo Graphy\\\"\\n};\\n\\nexport const Headline1 = (args) => <Headline {...args} />\\nHeadline1.args = {\\n    children: \\\"This is a title\\\",\\n    level: 1\\n}\\n\\nexport const Headline2 = (args) => <Headline {...args} />\\nHeadline2.args = {\\n    children: \\\"This is a title\\\",\\n    level: 2\\n}\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Headline1\":{\"startLoc\":{\"col\":25,\"line\":9},\"endLoc\":{\"col\":57,\"line\":9},\"startBody\":{\"col\":25,\"line\":9},\"endBody\":{\"col\":57,\"line\":9}},\"Headline2\":{\"startLoc\":{\"col\":25,\"line\":15},\"endLoc\":{\"col\":57,\"line\":15},\"startBody\":{\"col\":25,\"line\":15},\"endBody\":{\"col\":57,\"line\":15}}};\n    \nimport React from \"react\";\n\nimport Headline from \"./typography\";\n\nexport default {\n    title: \"Typo Graphy\"\n};\n\nexport const Headline1 = (args) => <Headline {...args} />;\nHeadline1.args = {\n    children: \"This is a title\",\n    level: 1\n}\n\nexport const Headline2 = (args) => <Headline {...args} />;Headline2.args = {\n    children: \"This is a title\",\n    level: 2\n}\n\n\n\n\nHeadline1.parameters = { storySource: { source: \"(args) => <Headline {...args} />\" }, ...Headline1.parameters };\nHeadline2.parameters = { storySource: { source: \"(args) => <Headline {...args} />\" }, ...Headline2.parameters };","import React, { ReactNode } from 'react';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\ninterface Props {\n    level: 1 | 2 | 3 | 4 | 5,\n    children: ReactNode\n}\n\nconst Headline: React.FC = ({ children, ...props }: Props) => (\n    <>\n        <Title {...props}>{children}</Title>\n\n    </>\n);\n\nexport default Headline;","import '@storybook/react';","/* (ignored) */"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AAAA;AAQA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAGA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9FA;AACA;AAAA;AAAA;AAAA;AAeA;AAAA;AAGA;AAHA;AAMA;AAMA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3FA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9GA;AACA;AAAA;AAkBA;AAAA;AAAA;AAAA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAJA;AAKA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AARA;AAaA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAGA;AAfA;AAeA;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCA;AACA;AAAA;AAAA;AAEA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}